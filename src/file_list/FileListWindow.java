/*
*  This file is part of S:SIMS.
*
*  S:SIMS is free software: you can redistribute it and/or modify
*  it under the terms of the GNU General Public License as published by
*  the Free Software Foundation, either version 3 of the License, or
*  (at your option) any later version.
*
*  S:SIMS is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*  GNU General Public License for more details.
*
*  You should have received a copy of the GNU General Public License
*  along with S:SIMS.  If not, see <http://www.gnu.org/licenses/>.
*/

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FileList.java
 *
 * Created on Aug 24, 2010, 3:21:26 PM
 */

package file_list;

import DataStructure.DataHouse;
import java.util.*;
import javax.swing.*;

/**
 * GUI component of file list subsystem. This is the main window
 * that users will interact with. This handles all GUI components
 * and event listeners.
 * @author 20378332
 */
public class FileListWindow extends javax.swing.JFrame {

    /** Creates new form FileList */
    public FileListWindow() {
        initComponents();
        this.setTitle("File List");
        showInputMenuItem.setVisible(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileListPopupMenu = new javax.swing.JPopupMenu();
        removeItem = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        fileList = new javax.swing.JList();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        loadInputFileMenu = new javax.swing.JMenuItem();
        exportSummaryTable = new javax.swing.JMenuItem();
        resetTable = new javax.swing.JMenuItem();
        saveListMenuItem = new javax.swing.JMenuItem();
        loadListMenuItem = new javax.swing.JMenuItem();
        exitItem = new javax.swing.JMenuItem();
        windowMenu = new javax.swing.JMenu();
        showOutputMenuItem = new javax.swing.JMenuItem();
        showSpreadsheetMenuItem = new javax.swing.JMenuItem();
        showInputMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        helpMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        fileListPopupMenu.setName("fileListPopupMenu"); // NOI18N

        removeItem.setText("Remove File");
        removeItem.setName("removeItem"); // NOI18N
        removeItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeItemActionPerformed(evt);
            }
        });
        fileListPopupMenu.add(removeItem);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SIMS-2");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        fileList.setModel(new DefaultListModel());
        fileList.setName("fileList"); // NOI18N
        fileList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fileListMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                fileListMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                fileListMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(fileList);

        jMenuBar1.setName("jMenuBar1"); // NOI18N

        fileMenu.setText("File");
        fileMenu.setName("fileMenu"); // NOI18N

        loadInputFileMenu.setText("Load Input File");
        loadInputFileMenu.setName("loadInputFileMenu"); // NOI18N
        loadInputFileMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadInputFileMenuActionPerformed(evt);
            }
        });
        fileMenu.add(loadInputFileMenu);

        exportSummaryTable.setText("Export Summary Table");
        exportSummaryTable.setName("exportSummaryTable"); // NOI18N
        exportSummaryTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportSummaryTableActionPerformed(evt);
            }
        });
        fileMenu.add(exportSummaryTable);

        resetTable.setText("Reset Table");
        resetTable.setName("resetTable"); // NOI18N
        resetTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetTableActionPerformed(evt);
            }
        });
        fileMenu.add(resetTable);

        saveListMenuItem.setText("Save List");
        saveListMenuItem.setName("saveListMenuItem"); // NOI18N
        saveListMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveListMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveListMenuItem);

        loadListMenuItem.setText("Load List");
        loadListMenuItem.setName("loadListMenuItem"); // NOI18N
        loadListMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadListMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(loadListMenuItem);

        exitItem.setText("Exit");
        exitItem.setName("exitItem"); // NOI18N
        exitItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitItem);

        jMenuBar1.add(fileMenu);

        windowMenu.setText("Windows");
        windowMenu.setName("windowMenu"); // NOI18N

        showOutputMenuItem.setText("Show Output Window");
        showOutputMenuItem.setName("showOutputMenuItem"); // NOI18N
        showOutputMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showOutputMenuItemActionPerformed(evt);
            }
        });
        windowMenu.add(showOutputMenuItem);

        showSpreadsheetMenuItem.setText("Show Summary Window");
        showSpreadsheetMenuItem.setName("showSpreadsheetMenuItem"); // NOI18N
        showSpreadsheetMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showSpreadsheetMenuItemActionPerformed(evt);
            }
        });
        windowMenu.add(showSpreadsheetMenuItem);

        showInputMenuItem.setText("Show Input Window");
        showInputMenuItem.setName("showInputMenuItem"); // NOI18N
        showInputMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showInputMenuItemActionPerformed(evt);
            }
        });
        windowMenu.add(showInputMenuItem);

        jMenuBar1.add(windowMenu);

        helpMenu.setText("Help");
        helpMenu.setName("helpMenu"); // NOI18N

        helpMenuItem.setText("help");
        helpMenuItem.setName("helpMenuItem"); // NOI18N
        helpMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(helpMenuItem);

        aboutMenuItem.setText("about");
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(aboutMenuItem);

        jMenuBar1.add(helpMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadInputFileMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadInputFileMenuActionPerformed
        DataHouse[] dh = FileListFunctions.loadInput();
        if (dh == null)
            return;

        dh = FileListFunctions.removeRedundancies(dh,files);
        boolean firstDisplayed = false;

        DefaultListModel dlm = (DefaultListModel) fileList.getModel();
        
        for (int i = 0; i < dh.length; i++) {

            if (dh[i] == null)
                continue;

            if (!firstDisplayed)    {
                FileListFunctions.displayData(dh[i]);
                firstDisplayed = true;
            }
            
            dlm.addElement(FileListFunctions.getFileName(dh[i]));
            files.add(dh[i]);
            FileListFunctions.addToSummary(dh[i]);
        }

        if (firstDisplayed) {
            FileListFunctions.updateTable();
            FileListFunctions.showOutputWindow();
            FileListFunctions.showSummaryWindow();
        }
    }//GEN-LAST:event_loadInputFileMenuActionPerformed

    private void exitItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitItemActionPerformed
        this.formWindowClosing(null);
        System.exit(0);
    }//GEN-LAST:event_exitItemActionPerformed

    private void showOutputMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showOutputMenuItemActionPerformed
        FileListFunctions.showOutputWindow();
    }//GEN-LAST:event_showOutputMenuItemActionPerformed

    private void showSpreadsheetMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showSpreadsheetMenuItemActionPerformed
        FileListFunctions.showSummaryWindow();
    }//GEN-LAST:event_showSpreadsheetMenuItemActionPerformed

    private void fileListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fileListMouseClicked
        int index = fileList.getSelectedIndex();

        if (index != lastIndex) {
            FileListFunctions.displayData(files.get(index));
            lastIndex = index;
        }
    }//GEN-LAST:event_fileListMouseClicked

    private void resetTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetTableActionPerformed
        //if (files.size() != 0)
            if (FileListFunctions.requestSystemWipe())
                FileListFunctions.resetTable(this);
    }//GEN-LAST:event_resetTableActionPerformed

    private void removeItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeItemActionPerformed
        int[] index = fileList.getSelectedIndices();

        if (index.length == 0)
            return;

        Arrays.sort(index);

        boolean request = FileListFunctions.requestRemove(files.get(index[0]));
        for (int i = index.length - 1; i >= 0; i--)  {
            if (request)   {
                ((DefaultListModel)fileList.getModel()).remove(index[i]);
                FileListFunctions.removeFromSystem(files.get(index[i]).fileName, this);
            }
        }
    }//GEN-LAST:event_removeItemActionPerformed

    private void fileListMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fileListMousePressed
        if (evt.isPopupTrigger()) {
            fileList.addSelectionInterval(fileList.locationToIndex(evt.getPoint()), fileList.locationToIndex(evt.getPoint()));
            fileListPopupMenu.show(fileList, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_fileListMousePressed

    private void saveListMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveListMenuItemActionPerformed
        FileListFunctions.saveFileList(files);
    }//GEN-LAST:event_saveListMenuItemActionPerformed

    private void loadListMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadListMenuItemActionPerformed
        if (files.size() != 0)  {
            if (FileListFunctions.requestSystemWipe())
                FileListFunctions.loadFileList(this);
        } else
            FileListFunctions.loadFileList(this);
    }//GEN-LAST:event_loadListMenuItemActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        FileListFunctions.saveWindowSettings(this);
    }//GEN-LAST:event_formWindowClosing

    private void exportSummaryTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportSummaryTableActionPerformed
        FileListFunctions.exportSummaryTable();
    }//GEN-LAST:event_exportSummaryTableActionPerformed

    private void showInputMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showInputMenuItemActionPerformed
        FileListFunctions.showInputWindow();
    }//GEN-LAST:event_showInputMenuItemActionPerformed

    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemActionPerformed
        new about.AboutWindow().setVisible(true);
    }//GEN-LAST:event_aboutMenuItemActionPerformed

    private void fileListMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fileListMouseReleased
        if (evt.isPopupTrigger()) {
            fileList.addSelectionInterval(fileList.locationToIndex(evt.getPoint()), fileList.locationToIndex(evt.getPoint()));
            fileListPopupMenu.show(fileList, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_fileListMouseReleased

    private void helpMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpMenuItemActionPerformed
        FileListFunctions.openHelpWindow();
    }//GEN-LAST:event_helpMenuItemActionPerformed

    protected void updateList()    {
        int size = files.size();
        ((DefaultListModel)fileList.getModel()).clear();
        for (int i = 0; i < size; i++)
            ((DefaultListModel)fileList.getModel()).addElement(files.get(i).fileName);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JMenuItem exitItem;
    private javax.swing.JMenuItem exportSummaryTable;
    private javax.swing.JList fileList;
    private javax.swing.JPopupMenu fileListPopupMenu;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenuItem helpMenuItem;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem loadInputFileMenu;
    private javax.swing.JMenuItem loadListMenuItem;
    private javax.swing.JMenuItem removeItem;
    private javax.swing.JMenuItem resetTable;
    private javax.swing.JMenuItem saveListMenuItem;
    private javax.swing.JMenuItem showInputMenuItem;
    private javax.swing.JMenuItem showOutputMenuItem;
    private javax.swing.JMenuItem showSpreadsheetMenuItem;
    private javax.swing.JMenu windowMenu;
    // End of variables declaration//GEN-END:variables

    protected ArrayList<DataHouse> files = new ArrayList<DataHouse> ();
    private int lastIndex = -1;
}
